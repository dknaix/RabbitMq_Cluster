HA Rabbit CLuster with NGINX TCP LoadBalancer proxy

docker network create rabbitmq-network

docker run -d --name rabbitmq-node1 \
  --hostname rabbitmq-node1 \
  --network rabbitmq-network \
  -p 5672:5672 -p 15672:15672 \
  -e RABBITMQ_ERLANG_COOKIE='secretcookie' \
  -e RABBITMQ_DEFAULT_USER=user \
  -e RABBITMQ_DEFAULT_PASS=password \
  rabbitmq:3-management

docker run -d --name rabbitmq-node2 \
  --hostname rabbitmq-node2 \
  --network rabbitmq-network \
  -p 5673:5672 -p 15673:15672 \
  -e RABBITMQ_ERLANG_COOKIE='secretcookie' \
  -e RABBITMQ_DEFAULT_USER=user \
  -e RABBITMQ_DEFAULT_PASS=password \
  rabbitmq:3-management

docker run -d --name rabbitmq-node3 \
  --hostname rabbitmq-node3 \
  --network rabbitmq-network \
  -p 5674:5672 -p 15674:15672 \
  -e RABBITMQ_ERLANG_COOKIE='secretcookie' \
  -e RABBITMQ_DEFAULT_USER=user \
  -e RABBITMQ_DEFAULT_PASS=password \
  rabbitmq:3-management

RESTARTING SERVICES
docker exec -it rabbitmq-node1 rabbitmqctl stop_app
docker exec -it rabbitmq-node1 rabbitmqctl reset
docker exec -it rabbitmq-node1 rabbitmqctl start_app

docker exec -it rabbitmq-node2 rabbitmqctl stop_app
docker exec -it rabbitmq-node2 rabbitmqctl reset
docker exec -it rabbitmq-node2 rabbitmqctl start_app

docker exec -it rabbitmq-node3 rabbitmqctl stop_app
docker exec -it rabbitmq-node3 rabbitmqctl reset
docker exec -it rabbitmq-node3 rabbitmqctl start_app

JOINING THE CLUSTER

docker exec -it rabbitmq-node1 rabbitmqctl join_cluster rabbit@rabbitmq-node2
docker exec -it rabbitmq-node1 rabbitmqctl join_cluster rabbit@rabbitmq-node3

docker exec -it rabbitmq-node2 rabbitmqctl join_cluster rabbit@rabbitmq-node1
docker exec -it rabbitmq-node2 rabbitmqctl join_cluster rabbit@rabbitmq-node3

docker exec -it rabbitmq-node3 rabbitmqctl join_cluster rabbit@rabbitmq-node1
docker exec -it rabbitmq-node3 rabbitmqctl join_cluster rabbit@rabbitmq-node2


=== Nginx Load Balancer ===

Nginx RP to Rabbit Cluster

docker run -d --name nginx-load-balancer --network rabbitmq-network -p 5000:5000  nginx:latest

stream.conf
stream {
    upstream rabbitmq_cluster {
    server rabbitmq-node1:5672;
	server rabbitmq-node2:5672;
	server rabbitmq-node3:5672;
        # Add more RabbitMQ nodes as needed
    }

    server {
        listen 5000;
        proxy_pass rabbitmq_cluster;
	#proxy_connect_timeout 1s;
    }
}

